{"version":3,"sources":["indexTimer.js"],"names":["CountdownTimer","constructor","selector","targetDate","start","timer","document","querySelector","days2","hours2","mins2","secs2","setInterval","currentTime","Date","now","time","updateTimerFace","getTimeComponents","pad","value","String","padStart","days","Math","floor","hours","mins","secs","textContent","timer2"],"mappings":";AAAA,MAAMA,EACJC,aAAY,SAAEC,EAAF,WAAYC,IACjBD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbC,KAAAA,QACCC,MAAAA,EAAQC,SAASC,cAAc,KAAKL,UAMrCM,KAAAA,MAAQH,EAAME,cAAc,gBAC5BE,KAAAA,OAASJ,EAAME,cAAc,iBAC7BG,KAAAA,MAAQL,EAAME,cAAc,mBAC5BI,KAAAA,MAAQN,EAAME,cAAc,mBAGnCH,QACEQ,YAAY,KACJC,MAAAA,EAAcC,KAAKC,MACnBC,EAAO,KAAKb,WAAaU,EAC1BI,KAAAA,gBAAgB,KAAKC,kBAAkBF,KAC3C,KAGLG,IAAIC,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAEnCJ,kBAAkBF,GAOT,MAAA,CAAEO,KANI,KAAKJ,IAAIK,KAAKC,MAAMT,EAAQ,QAM1BU,MALD,KAAKP,IACjBK,KAAKC,MAAOT,EAAQ,MAAyB,OAIzBW,KAFT,KAAKR,IAAIK,KAAKC,MAAOT,EAAQ,KAAoB,MAElCY,KADf,KAAKT,IAAIK,KAAKC,MAAOT,EAAQ,IAAc,OAUxDC,iBAAgB,KAAEM,EAAF,MAAQG,EAAR,KAAeC,EAAf,KAAqBC,IAChCpB,KAAAA,MAAMqB,eAAiBN,IACvBd,KAAAA,OAAOoB,eAAiBH,IACxBhB,KAAAA,MAAMmB,eAAiBF,IACvBhB,KAAAA,MAAMkB,eAAiBD,KAU5B,MAAME,EAAS,IAAI9B,EAAe,CAClCE,SAAU,WACVC,WAAY,IAAIW,KAAK","file":"indexTimer.05a62367.js","sourceRoot":"../src","sourcesContent":["class CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.selector = selector;\n    this.targetDate = targetDate;\n    this.start();\n    const timer = document.querySelector(this.selector);\n    // this.days = timer.querySelector('[data-value =\"days\"]');\n    // this.hours = timer.querySelector('[data-value =\"hours\"]');\n    // this.mins = timer.querySelector('[data-value =\"mins\"]');\n    // this.secs = timer.querySelector('[data-value =\"secs\"]');\n      \n    this.days2 = timer.querySelector('.timer__days');\n    this.hours2 = timer.querySelector('.timer__hours');\n    this.mins2 = timer.querySelector('.timer__minutes');\n    this.secs2 = timer.querySelector('.timer__seconds'); \n  }\n\n  start() {\n    setInterval(() => {\n      const currentTime = Date.now();\n      const time = this.targetDate - currentTime;\n      this.updateTimerFace(this.getTimeComponents(time));\n    }, 1000);\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n  getTimeComponents(time) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n    );\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n    return { days, hours, mins, secs };\n  }\n\n  // updateTimerFace({ days, hours, mins, secs }) {\n  //   this.days.textContent = `${days}`;\n  //   this.hours.textContent = `${hours}`;\n  //   this.mins.textContent = `${mins}`;\n  //   this.secs.textContent = `${secs}`;\n  //   }\n    updateTimerFace({ days, hours, mins, secs }) {\n    this.days2.textContent = `${days}`;\n    this.hours2.textContent = `${hours}`;\n    this.mins2.textContent = `${mins}`;\n    this.secs2.textContent = `${secs}`;\n  }\n}\n\n    \n    // const timer = new CountdownTimer({\n    // selector: '#timer',\n    // targetDate: new Date('Jan 01, 2022'),\n    // });\n\n    const timer2 = new CountdownTimer({\n    selector: '#timer-2',\n    targetDate: new Date('Jan 01, 2022'),\n    });"]}