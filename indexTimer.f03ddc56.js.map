{"version":3,"sources":["indexTimer.js"],"names":["CountdownTimer","constructor","selector","targetDate","start","timer","document","querySelector","days","hours","mins","secs","setInterval","currentTime","Date","now","time","updateTimerFace","getTimeComponents","pad","value","String","padStart","Math","floor","textContent","timer2"],"mappings":";AAAA,MAAMA,EACJC,aAAY,SAAEC,EAAF,WAAYC,IACjBD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbC,KAAAA,QACCC,MAAAA,EAAQC,SAASC,cAAc,KAAKL,UACrCM,KAAAA,KAAOH,EAAME,cAAc,wBAC3BE,KAAAA,MAAQJ,EAAME,cAAc,yBAC5BG,KAAAA,KAAOL,EAAME,cAAc,wBAC3BI,KAAAA,KAAON,EAAME,cAAc,wBAIlCH,QACEQ,YAAY,KACJC,MAAAA,EAAcC,KAAKC,MACnBC,EAAO,KAAKb,WAAaU,EAC1BI,KAAAA,gBAAgB,KAAKC,kBAAkBF,KAC3C,KAGLG,IAAIC,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAEnCJ,kBAAkBF,GAOT,MAAA,CAAER,KANI,KAAKW,IAAII,KAAKC,MAAMR,EAAQ,QAM1BP,MALD,KAAKU,IACjBI,KAAKC,MAAOR,EAAQ,MAAyB,OAIzBN,KAFT,KAAKS,IAAII,KAAKC,MAAOR,EAAQ,KAAoB,MAElCL,KADf,KAAKQ,IAAII,KAAKC,MAAOR,EAAQ,IAAc,OAIxDC,iBAAgB,KAAET,EAAF,MAAQC,EAAR,KAAeC,EAAf,KAAqBC,IAC9BH,KAAAA,KAAKiB,eAAiBjB,IACtBC,KAAAA,MAAMgB,eAAiBhB,IACvBC,KAAAA,KAAKe,eAAiBf,IACtBC,KAAAA,KAAKc,eAAiBd,KAM7B,MAAMN,EAAQ,IAAIL,EAAe,CAC/BE,SAAU,SACVC,WAAY,IAAIW,KAAK,kBAGjBY,EAAS,IAAI1B,EAAe,CAChCE,SAAU,WACVC,WAAY,IAAIW,KAAK","file":"indexTimer.f03ddc56.js","sourceRoot":"../src","sourcesContent":["class CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.selector = selector;\n    this.targetDate = targetDate;\n    this.start();\n    const timer = document.querySelector(this.selector);\n    this.days = timer.querySelector('[data-value =\"days\"]');\n    this.hours = timer.querySelector('[data-value =\"hours\"]');\n    this.mins = timer.querySelector('[data-value =\"mins\"]');\n    this.secs = timer.querySelector('[data-value =\"secs\"]');\n     \n  }\n\n  start() {\n    setInterval(() => {\n      const currentTime = Date.now();\n      const time = this.targetDate - currentTime;\n      this.updateTimerFace(this.getTimeComponents(time));\n    }, 1000);\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n  getTimeComponents(time) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n    );\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n    return { days, hours, mins, secs };\n  }\n\n    updateTimerFace({ days, hours, mins, secs }) {\n      this.days.textContent = `${days}`;\n      this.hours.textContent = `${hours}`;\n      this.mins.textContent = `${mins}`;\n      this.secs.textContent = `${secs}`;\n    }\n    \n}\n\n    \n    const timer = new CountdownTimer({\n      selector: '#timer',\n      targetDate: new Date('Jan 01, 2022'),\n    });\n\n    const timer2 = new CountdownTimer({\n      selector: '#timer-2',\n      targetDate: new Date('Jan 11, 2022'),\n    });"]}