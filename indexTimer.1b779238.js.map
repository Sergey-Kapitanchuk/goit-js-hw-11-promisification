{"version":3,"sources":["indexTimer.js"],"names":["CountdownTimer","constructor","selector","targetDate","start","timer","document","querySelector","days","hours","mins","secs","setInterval","currentTime","Date","now","time","updateTimerFace","getTimeComponents","pad","value","String","padStart","Math","floor","textContent"],"mappings":";AAAA,MAAMA,EACFC,aAAY,SAAEC,EAAF,WAAYC,IACfD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbC,KAAAA,QACCC,MAAAA,EAAQC,SAASC,cAAc,KAAKL,UACrCM,KAAAA,KAAOH,EAAME,cAAc,wBAC3BE,KAAAA,MAAQJ,EAAME,cAAc,yBAC5BG,KAAAA,KAAOL,EAAME,cAAc,wBAC3BI,KAAAA,KAAON,EAAME,cAAc,wBAGpCH,QACIQ,YAAY,KACFC,MAAAA,EAAcC,KAAKC,MACnBC,EAAO,KAAKb,WAAaU,EAC1BI,KAAAA,gBAAgB,KAAKC,kBAAkBF,KAC7C,KAGPG,IAAIC,GACOC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAErCJ,kBAAkBF,GAOH,MAAA,CAAER,KANA,KAAKW,IAAII,KAAKC,MAAMR,EAAQ,QAMtBP,MALL,KAAKU,IACfI,KAAKC,MAAOR,EAAQ,MAAyB,OAIvBN,KAFT,KAAKS,IAAII,KAAKC,MAAOR,EAAQ,KAAoB,MAElCL,KADf,KAAKQ,IAAII,KAAKC,MAAOR,EAAQ,IAAc,OAI5DC,iBAAgB,KAAET,EAAF,MAAQC,EAAR,KAAeC,EAAf,KAAqBC,IAC5BH,KAAAA,KAAKiB,eAAiBjB,IACtBC,KAAAA,MAAMgB,eAAiBhB,IACvBC,KAAAA,KAAKe,eAAiBf,IACtBC,KAAAA,KAAKc,eAAiBd,KAInC,MAAMN,EAAQ,IAAIL,EAAe,CAC/BE,SAAU,WACVC,WAAY,IAAIW,KAAK","file":"indexTimer.1b779238.js","sourceRoot":"../src","sourcesContent":["class CountdownTimer {\n    constructor({ selector, targetDate }) {\n        this.selector = selector;\n        this.targetDate = targetDate;\n        this.start();\n        const timer = document.querySelector(this.selector);\n        this.days = timer.querySelector('[data-value =\"days\"]');\n        this.hours = timer.querySelector('[data-value =\"hours\"]');\n        this.mins = timer.querySelector('[data-value =\"mins\"]');\n        this.secs = timer.querySelector('[data-value =\"secs\"]');\n    }\n    \n    start() {\n        setInterval(() => {\n            const currentTime = Date.now();\n            const time = this.targetDate - currentTime;\n            this.updateTimerFace(this.getTimeComponents(time));\n        }, 1000);\n    }\n    \n    pad(value) {\n        return String(value).padStart(2, '0');\n    }\n    getTimeComponents(time) {\n        const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n        const hours = this.pad(\n            Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n            );\n            const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n            const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n            return { days, hours, mins, secs };\n        }\n        \n        updateTimerFace({ days, hours, mins, secs }) {\n            this.days.textContent = `${days}`;\n            this.hours.textContent = `${hours}`;\n            this.mins.textContent = `${mins}`;\n            this.secs.textContent = `${secs}`;\n        }\n    }\n    \n    const timer = new CountdownTimer({\n      selector: '#timer-1',\n      targetDate: new Date('Jul 17, 2022'),\n    });\n    \n    \n    "]}